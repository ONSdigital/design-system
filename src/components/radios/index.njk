---
title: Radios
---

+++
{% from "views/partials/example/_macro.njk" import patternlibExample %}
{% from "components/external-link/_macro.njk" import onsExternalLink %}
{% from "components/lists/_macro.njk" import onsList %}
+++

Radios let the user select a single option from a list.

{{
    patternlibExample({"path": "components/radios/examples/radios/index.njk"})
}}

## When to use this component
Use the radio component when you need to help users select a single option from a list.

## When not to use this component
Do not use the radios component if users can choose more than one option from a list. In this case, use the [checkboxes](/components/checkboxes) component.

## How to use this component
Radios are grouped within a [fieldset](/components/fieldset) which starts with a `<legend>` which lets the user know what they need to do.

## Variants

### Descriptions
This variant allows you to add more context to the radio answers. The description is added by providing a `description` parameter within the radio’s `label` parameter.

Answer descriptions are a good way to provide examples to help a user answer a question without disrupting their journey through the survey.

Answer descriptions should:
{{
    onsList({
        "itemsList": [
            {
                "text": 'be short – try to have no more than 100 characters'
            },
            {
                "text": 'be clearly written'
            },
            {
                "text": 'be relevant to that answer only, not any of the other answers'
            },
            {
                "text": 'start with a capital letter'
            },
            {
                "text": 'not have a full stop on the end'
            }
        ]
    })
}}

{{
    patternlibExample({"path": "components/radios/examples/radios-descriptions/index.njk"})
}}

### Radio with input
This variant lets the user provide an answer other to the options in the list, or to provide additional information required to describe their answer.

Provide the `other` parameter and provide the relevant [input](/components/input) parameters. The field is hidden until the radio is `:checked`.

{{
    patternlibExample({"path": "components/radios/examples/radios-other/index.njk"})
}}


### Radio with revealed drop-down
This variant uses a [select component](/components/select) instead.

To use this variant provide `"otherType": "select"` inside the `other` parameter.

{{
    patternlibExample({"path": "components/radios/examples/radios-select/index.njk"})
}}

### Radio with visible input
This variant of “radio with input” shows the input instead of waiting for the radio to be `:checked`.

{{
    patternlibExample({"path": "components/radios/examples/radios-other-open/index.njk"})
}}

### Radios with an “or” separator

{{
    patternlibExample({"path": "components/radios/examples/radios-with-or/index.njk"})
}}

### Radios with the option to clear

This variant displays a ”Clear selection” button which allows the user to deselect/clear the fieldset so all radios are not `:checked`. The button is displayed after a radio is selected. The `aria-live` attribute is used for announcing changes in assistive technologies.

If this variant is implemented on a question page that contains a primary submit button, a hidden duplicate submit button should be added to the top of the form to ensure the default enter key behaviour actions this button, and not the clear button.
The submit button should use the `hidden` attribute and also the `ons-u-d-no` utility class to set the button to `display:none`. This hides the button both visually and from screen readers.
{{
    patternlibExample({"path": "components/radios/examples/radios-clear/index.njk"})
}}

### Radios without a border

This variant removes the border around the radio input and [label](/components/label). Do not use it for question pages with radios. It is better to have a border. It makes the radios more visible for users and gives them a larger target area to select (the label and the boundary).

Only remove the radio border for pages that are not following the practice of “one thing per page”, where the radios are not the primary call to action. For example, the radios could be one part of a multipurpose page, like the checkboxes used for the filters on the [download resources pattern](/patterns/download-resources/).
{{
    patternlibExample({"path": "components/radios/examples/radios-borderless/index.njk"})
}}

### Radio with revealed checkboxes

This variant reveals nested [checkboxes](/components/checkboxes) when a radio is selected. We recommend using this variant together with the parent radios using the borderless variant.

To use this variant provide `"otherType": "checkboxes"` inside the `other` parameter. The example below includes the optional parameter `selectAllChildren: true` which automatically checks all revealed checkboxes.

{{
    patternlibExample({"path": "components/radios/examples/radios-other-checkboxes/index.njk"})
}}

### Radio with revealed radios

This variant reveals nested radios when a radio is selected. We recommend using this variant together with the parent radios using the borderless variant.

To use this variant provide `"otherType": "radios"` inside the `other` parameter.

{{
    patternlibExample({"path": "components/radios/examples/radios-other-radios/index.njk"})
}}

## How to check radios
To help users make a selection on the page and provide extra detail if it is required, you should:
{{
    onsList({
        "itemsList": [
            {
                "text": 'check they have selected a radio'
            },
            {
                "text": 'check they have entered something or selected a drop-down option if more detail is required for one of the radios'
            },
            {
                "text": 'show an error message if they have not selected a radio or given any more detail when required'
            }
        ]
    })
}}

### Error messages

Use the [correct errors pattern](/patterns/correct-errors) and show the error details above the radios.

{{
    patternlibExample({"path": "components/radios/examples/radios-error/index.njk"})
}}

#### If a radio has not been selected
Use “Select [whatever it is]”.\
For example, “Select your religion”.

#### If it is a question with yes or no answers and a radio has not been selected
Use “Select an answer”.

#### If “radio with input” is selected but the input field is empty
Use “Enter [whatever it is]”.\
For example, “Enter your gender identity”.

#### If “radio with drop-down” is selected but a drop-down option has not been selected
Use “Select [whatever topic the drop-down is asking for]”.\
For example, “Select your preferred time of day for us to contact you”.

## Help improve this component
Let us know how we could improve this component or share your user research findings.
{{
    onsExternalLink({
        "url": "https://github.com/ONSdigital/design-system/discussions/56",
        "linkText": "Discuss the ‘Radios’ component on GitHub"
    })
}}
