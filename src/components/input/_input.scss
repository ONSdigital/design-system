.input {
  z-index: 3;
  display: block;
  position: relative;
  padding: $input-padding-vertical $input-padding-horizontal;
  width: 100%;

  border: $input-border-width solid $color-input;
  border-radius: $input-radius;

  color: inherit;
  font-family: inherit;
  font-size: 1rem;
  line-height: 1rem;

  &::-ms-clear {
    display: none;
  }

  @include mq(s) {
    &--text,
    &--select {
      &:not(.input--block):not([class*='input--w-']) {
        width: $input-width;
      }
    }
  }

  &--text,
  &--textarea {
    // Prevent inner shadow on iOS
    -webkit-appearance: none;
  }

  &:focus {
    outline: 1px solid $color-input;
    outline-offset: -2px;
    box-shadow: 0 0 0 3px $color-focus;
  }
}

// Text input widths
@include input-width('input--w-{x}');

.input--postcode {
  width: 100%;
  max-width: input-width-calc($chars: 5, $num-chars: 2, $spaces: 1);
}

.input__helper {
  margin-top: 0.2rem;
  font-size: 0.8rem;
  font-weight: 600;
}

.input--select {
  appearance: none;
  padding: 0.5rem 2rem 0.5rem $input-padding-horizontal;
  background: $color-white url('#{$static}/img/icons/icons--chevron-down.svg') no-repeat center right 10px;
  background-size: 1rem;

  &::-ms-expand {
    display: none;
  }
}

.input--textarea {
  width: 100%;
  line-height: normal;
  resize: vertical;
}

.input--block {
  display: block;
  width: 100%;
}

.input--placeholder {
  background: transparent;
  &::placeholder {
    color: transparent;
  }
  &:valid {
    background: $color-white;
  }
  &:focus {
    background: $color-white;
  }
}

.input--limit-reached {
  border: $input-border-width solid $color-red;

  &:focus {
    outline: $input-border-width solid $color-red;
  }
}

.input__limit {
  display: block;

  &--reached {
    color: $color-red;
  }
}

.typeahead {
  position: relative;

  &__combobox {
    display: inline-block;
    border-radius: $input-radius;

    @include mq('xs', 's') {
      width: 100%;
    }
  }

  &__results {
    display: none;
    margin: 0.5rem 0 0;
    padding: 0;
    width: 100%;

    overflow: hidden;

    border: 1px solid $color-input;
    border-radius: $input-radius;
  }

  &__results-title {
    padding: 0.25rem 0.5rem;
    border-bottom: 1px solid $color-input;
    background: $color-grey-4;
  }

  &__listbox {
    margin: 0;
    padding: 0;
    list-style: none;
    background: $color-white;
  }

  &__option {
    margin: 0;
    padding: $input-padding-horizontal;
    outline: none;

    cursor: pointer;

    &:not(:last-child) {
      border-bottom: 1px solid $color-input;
    }

    &:not(&--no-results):not(&--more-results):hover,
    &--focused:not(&--no-results) {
      border-color: $color-blue;
      background: $color-blue;
      color: $color-white;
    }

    &--no-results,
    &--more-results {
      padding: 0.25rem 0.5rem;
      background: $color-grey-4;
      cursor: not-allowed;
    }
  }

  // Modifiers
  &:not(&--initialised) & {
    &__instructions,
    &__listbox,
    &__status {
      display: none;
    }
  }

  &--has-results & {
    &__results {
      display: block;
    }
  }
}
