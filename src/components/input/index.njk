---
title: Input
---
{% from "views/partials/example/_macro.njk" import patternlibExample %}
{% from "components/external-link/_macro.njk" import onsExternalLink %}
{% from "components/panel/_macro.njk" import onsPanel %}

The input component lets users enter alphanumeric characters for answers that are no longer than one line, using the appropriate keyboard on touch devices.
{{
    patternlibExample({"path": "components/input/examples/text/index.njk"})
}}

## When to use this component
Use the input component when you need to let users enter alphanumeric information that is no longer than one line, such as their telephone number or email address.

## When not to use this component
Do not use this component if you need to let users enter information that will span more than one line.  In this case, you should use the [textarea](/components/textarea) component.

## How to use this component
All input components must have a visible [label](/components/label).

Inputs should be appropriately sized to help the user understand what they should enter by making them the right size for the content they are intended for.

By default, the input component will fill the width of its container up to 500px viewport width, then limited to 19.5rem.  A [width constraint](#width-constrained) class can be used to make the input smaller.

### Autocomplete
Use the `autocomplete` attribute on inputs to help the user fill out a form more quickly. This attribute lets you specify a purpose for the input so the user's browser can autofill the information for them.

You will need to use the autocomplete attribute for each applicable {{
    onsExternalLink({
        "url": "https://www.w3.org/TR/WCAG21/#input-purposes",
        "linkText": "input purpose"
    })
}} to meet AA WCAG 2.1 accessibility requirements.

### Description
An optional `label__description` can be used to display a hint to help the user enter their information.
{{
    patternlibExample({"path": "components/input/examples/text-description/index.njk"})
}}

##Â Variants

### Width constrained
Where possible, you should make the inputs the right width for the size of content they are intended for to help users understand what they should enter.  For example, UK postcodes never consist of more than 8 characters.

Inputs can have their widths constrained (but not limited) to the number of expected characters using the `input--w-<number>` class. Available widths are: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50.
{{
    patternlibExample({"path": "components/input/examples/text-width-constrained/index.njk"})
}}

### Email
Setting the type to `email` will bring up the correct keypad on touch devices.
{{
    patternlibExample({"path": "components/input/examples/email/index.njk"})
}}

### Telephone
Setting the type to `tel` will bring up the correct keypad on touch devices.
{{
    patternlibExample({"path": "components/input/examples/telephone/index.njk"})
}}

### Character limit checker
Used for client side validation of an input that requires a character limit. The character limit counter is displayed when the `charCheckLimit` object is defined with params `limit`, `charCountOverLimitSingular`, `charCountOverLimitPlural` parameters.

{{
    patternlibExample({"path": "components/input/examples/text-character-limit/index.njk"})
}}

## Research on this component
{% call onsPanel() %}
    If you have conducted any user research using this component, please feed back your findings via the
    {{
        onsExternalLink({
            "url": "https://github.com/ONSdigital/design-system/issues/163",
            "linkText": "Design System forum"
        })
    }}
{% endcall %}

## Design System forum
{{
    onsExternalLink({
        "url": "https://github.com/ONSdigital/design-system/issues/163",
        "linkText": "Discuss 'Input' on GitHub"
    })
}}
