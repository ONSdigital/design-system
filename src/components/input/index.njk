---
title: Input
synonyms: Text field, Text input
---

+++
{% from "views/partials/example/_macro.njk" import patternlibExample %}
{% from "components/external-link/_macro.njk" import onsExternalLink %}
{% from "components/panel/_macro.njk" import onsPanel %}
{% from "components/lists/_macro.njk" import onsList %}
+++

The input component lets users enter alphanumeric characters for answers that are no longer than one line, using the appropriate keyboard on touch devices.
{{
    patternlibExample({"path": "components/input/examples/input-text/index.njk"})
}}

## When to use this component
Use the input component when you need to let users enter alphanumeric information that is no longer than one line, such as their telephone number or email address.

There is specific guidance on how to input:
{{
    onsList({
        "itemsList": [
            {
                "url": '/patterns/access-codes',
                "text": 'access codes'
            },
            {
                "url": '/patterns/addresses',
                "text": 'addresses'
            },
            {
                "url": '/patterns/dates',
                "text": 'dates'
            },
            {
                "url": '/patterns/durations',
                "text": 'durations'
            },
            {
                "url": '/patterns/email-addresses',
                "text": 'email addresses'
            },
            {
                "url": '/patterns/numeric-values',
                "text": 'numeric values'
            },
            {
                "url": '/patterns/phone-numbers',
                "text": 'phone numbers'
            },
            {
                "url": '/components/search',
                "text": 'search terms'
            }
        ]
    })
}}

## When not to use this component
Do not use this component if you need to let users enter information that will span more than one line.  In this case, you should use the [textarea](/components/textarea) component.

## How to use this component
All input components must have a visible [label](/components/label).

Inputs should be appropriately sized to help the user understand what they should enter by making them the right size for the content they are intended for.

By default, the input component will fill the width of its container up to 500px viewport width, then limited to 20rem.  A [width constraint](#width-constrained) class can be used to make the input smaller.

### Autocomplete
Use the `autocomplete` attribute on inputs to help the user fill out a form more quickly. This attribute lets you specify a purpose for the input so the user's browser can autofill the information for them.

You will need to use the autocomplete attribute for each applicable {{
    onsExternalLink({
        "url": "https://www.w3.org/TR/WCAG21/#input-purposes",
        "linkText": "input purpose"
    })
}} to meet AA WCAG 2.1 accessibility requirements.

## Variants

### Input with description
An optional `description` parameter can be provided inside the [label](/components/label) object to display a hint to help the user enter their information.
{{
    patternlibExample({"path": "components/input/examples/input-text-with-description/index.njk"})
}}

### Width constrained
You should set the width of inputs to suit the type of content to help users understand what they need to enter.

To calculate the width to constrain to, you need to set a `type` and a `width` value. The type will determine if the input will contain letters or numbers.

The values you set will determine how wide the input is based on either the widest letter “W“ or the widest number “4“. For example, if you set `type: text` and `width: 3`, this will constrain the input to the width of “WWW”. “text” will be used by default.

The `width` values available for both types range from “1” to “10” and “15”, “20”, “30”, “40” and “50”.

For inputs that will contain both letters and numbers, you will need to use an appropriate number value. For example, UK postcodes always consist of up to 7 letters and numbers and one optional space separating the outward and inward codes. A width of “7” will create a width appropriate to fit the widest potential postcode “WW4W 4WW”.

{{
    patternlibExample({"path": "components/input/examples/input-text-width-constrained/index.njk"})
}}

There is specific guidance on how to ask users for [addresses](/patterns/addresses).

### Email
Setting `type` to “email” will bring up the correct keypad on touch devices.
{{
    patternlibExample({"path": "components/input/examples/input-email/index.njk"})
}}

There is specific guidance on how to ask users for [email addresses](/patterns/email-addresses).

### Telephone
Setting `type` to “tel” will bring up the correct keypad on touch devices.
{{
    patternlibExample({"path": "components/input/examples/input-telephone/index.njk"})
}}

There is specific guidance on how to ask users for [phone numbers](/patterns/phone-numbers).

### Number
Setting the `type` parameter to “number” will set the HTML attributes `inputmode` and `pattern` to bring up the correct keypad on touch devices. 

+++
{% call onsPanel() %}

    The HTML <code>type</code> attribute will be set to “text” rather than “number” due to{{
        onsExternalLink({
            "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1398528",
            "linkText": "an issue with Firefox and Safari not blocking non-numeric characters"
        })
    }}

{% endcall %}
+++

{{
    patternlibExample({"path": "components/input/examples/input-number-prefixed/index.njk"})
}}

There is specific guidance on how to ask users for [numeric values](/patterns/numeric-values) including entering numbers with units, such as currencies and measurements.

### Character limit checker
Can be used for client-side validation of inputs that need character limits due to data size restrictions.

Use this variant as little as possible. Users do not expect a limit on inputs, and often do not look up from a keyboard as they type. This means they may not notice the counter.

The character limit counter is displayed when the limit is exceeded. Set the `charCheckLimit` object with the `limit`, `charCountOverLimitSingular` and `charCountOverLimitPlural` parameters.

{{
    patternlibExample({"path": "components/input/examples/input-text-with-character-limit-checker/index.njk"})
}}

## How to check an input field
To help users enter something valid into an input field, you should:
{{
    onsList({
        "itemsList": [
            {
                "text": 'allow them to paste into the input field'
            },
            {
                "text": 'check they have entered something in the input field'
            },
            {
                "text": 'check that what they have entered is valid'
            },
            {
                "text": 'show an error message if they have not entered anything or what they have entered is not valid'
            }
        ]
    })
}}

### Error messages
Use the [correct errors pattern](/patterns/correct-errors) and show the error details above the input field.
{{
    patternlibExample({"path": "patterns/ask-users-for/email-addresses/examples/input-email-with-error/index.njk"})
}}

#### If the input field is empty
Use “Enter [whatever the input is]”.\
For example, “Enter an email address”.

#### If what is entered in the input field is not in a valid format
Use “Enter [whatever the input is] in a valid format, for example, [whatever the example is]”.\
For example, “Enter an email address in a valid format, for example, name@example.com”.

{{
    onsPanel({
        "type": "warn",
        "body": "<p>Only use an example if it is appropriate. For security reasons, it may not be appropriate to give an example of an access code.</p>"
    })
}}

There is specific guidance on how to ask users for [access codes](/patterns/access-codes).

## Research on this component
The [character limit checker](#character-limit-checker) input variant was last user tested between February and September 2020 during research for Census 2021. The following findings were reported:
{{
    onsList({
        "itemsList": [
            {
                "text": 'users who look down at a keyboard while typing may not notice the character counter'
            },
            {
                "text": 'they expect to be stopped from entering too many characters'
            }
        ]
    })
}}

## Help improve this component
Let us know how we could improve this component or share your user research findings.
{{
    onsExternalLink({
        "url": "https://github.com/ONSdigital/design-system/discussions/1383",
        "linkText": "Discuss the ‘Input’ component on GitHub"
    })
}}
