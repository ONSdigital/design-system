{% macro onsInput(params) %}
    {% from "components/mutually-exclusive/_macro.njk" import onsMutuallyExclusive %}
    {% from "components/field/_macro.njk" import onsField %}
    {% from "components/label/_macro.njk" import onsLabel %}

    {% if params.type == "number" %}
        {# Type must be "text" or Firefox and Safari will set a blank value to the server if non numeric characters are entered -
        they don't block non numeric characters: https://bugzilla.mozilla.org/show_bug.cgi?id=1398528 #}
        {% set type = "text" %}
        {% set pattern = "[0-9]*" %}
        {% set inputmode = "numeric" %}
    {% elif params.type %}
        {% set type = params.type %}
    {% else %}
        {% set type = "text" %}
    {% endif %}

    {% set exclusiveClass = " js-exclusive-group" if params.mutuallyExclusive else "" %}
    {% set input %}
        {% if params.typeahead.typeaheadData %}
            <div
                id="{{ params.id }}-container"
                class="js-typeahead typeahead-input {{ params.classes }}"
                data-content="{{ params.typeahead.content | dump }}"
                typeahead-data="{{ params.typeahead.typeaheadData }}"
            >
        {% endif %}

                <input
                    type="{{ type }}"
                    id="{{ params.id }}"
                    class="input input--text input-type__input js-typeahead-input {{ params.classes }}{{ exclusiveClass }}"
                    {% if params.prefix or params.suffix %}title="{{ params.prefix.title if params.prefix }}{{ params.suffix.title if params.suffix }}"{% endif %}
                    {% if params.name is defined %}name="{{ params.name }}"{% endif %}
                    {% if params.accessiblePlaceholder is defined %}required{% endif %}
                    {% if params.value is defined %}value="{{ params.value }}"{% endif %}
                    {% if params.accept is defined %}accept="{{ params.accept }}"{% endif %}
                    {% if params.min is defined %}min="{{ params.min }}"{% endif %}
                    {% if params.max is defined %}max="{{ params.max }}"{% endif %}
                    {% if params.minLength is defined %}minlength="{{ params.minLength }}"{% endif %}
                    {% if params.maxLength is defined %}maxlength="{{ params.maxLength }}"{% endif %}
                    {% if pattern is defined %}pattern="{{ pattern }}"{% endif %}
                    {% if inputmode is defined %}inputmode="{{ inputmode }}"{% endif %}
                    {% if params.autocomplete is defined %}autocomplete="{{ params.autocomplete }}"{% endif %}
                    {% if params.charcheck %}data-char-check-ref="{{ params.id }}-check-remaining" data-char-check-num="{{ params.charcheck }}"{% endif %}
                    {% if params.attributes %}{% for attribute, value in (params.attributes.items() if params.attributes is mapping and params.attributes.items else params.attributes) %}{{ attribute }}{% if value %}="{{ value }}"{% endif %} {% endfor %}{% endif %}
                />

        {% if params.typeahead.typeaheadData %}
                <div class="typeahead-input__results js-typeahead-results">
                    <header class="typeahead-input__results-title u-fs-s">{{ params.typeahead.content.results_title }}</header>
                    <ul class="typeahead-input__listbox js-typeahead-listbox" role="listbox" id="{{ params.id }}-listbox" tabindex="-1"></ul>
                </div>

                <div class="typeahead-input__instructions u-vh js-typeahead-instructions" id="{{ params.id }}-instructions" tabindex="-1">{{ params.typeahead.instructions }}</div>
                <div class="typeahead-input__status u-vh js-typeahead-aria-status" aria-live="polite" role="status" tabindex="-1"></div> 
            </div>
        {% endif %}
    {% endset %}
    {% set field %}
        {% if params.label or not (params.prefix or params.suffix or type == 'password') %}
            {{ onsLabel({
                "for": params.id,
                "id": params.label.id,
                "text": params.label.text,
                "classes": params.label.classes,
                "description": params.label.description,
                "attributes": params.label.attributes
            }) }}
        {% endif %}

        {% if params.prefix or params.suffix %}
            {% if params.prefix is defined %}
                {% set prefixClass = " input-type--prefix" %}
            {% endif %}

            <span class="input-type{{ prefixClass }}">
                <span class="input-type__inner">
                    {{ input | safe }}
                    {% set abbr = params.prefix or params.suffix %}
                    <abbr
                        class="input-type__type"
                        aria-hidden="true"
                        title="{{ abbr.title }}"
                        {% if abbr.id %} id="{{ abbr.id }}"{% endif %}
                        >{{ abbr.text or abbr.title }}</abbr>
                </span>
            </span>
        {% else %}
            {{ input | safe }}
        {% endif %}
    {% endset %}

    {% if params.mutuallyExclusive %}
        {% call onsMutuallyExclusive({
            "id": params.fieldId,
            "legend": params.legend,
            "legendClasses": params.legendClasses,
            "description": params.description,
            "dontWrap": params.dontWrap,
            "checkbox": params.mutuallyExclusive.checkbox,
            "or": params.mutuallyExclusive.or,
            "deselectMessage": params.mutuallyExclusive.deselectMessage,
            "deselectGroupAdjective": params.mutuallyExclusive.deselectGroupAdjective,
            "deselectCheckboxAdjective": params.mutuallyExclusive.deselectCheckboxAdjective,
            "error": params.error
        }) %}
            {% call onsField({
                "error": params.error
            }) %}
                {{ field | safe }}
            {% endcall %}
        {% endcall %}
    {% elif type == "hidden" %}
        {{ field | safe }}
    {% else %}
        {% call onsField({
            "id": params.fieldId,
            "classes": params.fieldClasses,
            "dontWrap": params.dontWrap,
            "error": params.error
        }) %}
            {{ field | safe }}
        {% endcall %}
    {% endif %}
{% endmacro %}
