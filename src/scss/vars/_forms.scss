@import '../helpers/functions';

$input-radius: 3px;
$input-padding-vertical: 0.39rem;
$input-padding-horizontal: 0.5rem;
$input-width: 20rem;
$input-border-width: 1px;
$input-widths: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 30, 40, 50;
// Widest character (capital W) is 1.0065rem wide
$char-max-width: 0.9rem;
// Widest number (4) is 0.54rem  wide
$num-max-width: 0.54rem;
// Not the width of a space, the width of the space between characters with no spaces between
$char-space-width: 0.029rem;
// Space width
$nbsp-width: 0.256rem;

@mixin input-width($class-name, $char-width: $char-max-width) {
  @each $width in $input-widths {
    .#{str-replace($class-name, '{x}', $width)} {
      max-width: input-width-calc($width, $char-width);
      width: 100%;

      .ons-field__group & {
        width: input-width-calc($width, $char-width);
      }

      @if $width <= 10 {
        .ons-input-type & {
          width: input-width-calc($width, $char-width);
        }
      }
    }
  }
}

@function input-width-calc($chars: 1, $char-width: $char-max-width, $spaces: 0, $num-chars: 0) {
  // Space between characters is 0.029rem wide
  // Extra 2 pixels are to prevent clipping when the cursor is visible (2px is needed for iOS)

  $padding-width: $input-padding-horizontal * 2;
  $chars-width: $char-width * $chars;
  $num-chars-width: $num-max-width * $num-chars;
  $chars-space-width: $char-space-width * ($chars + $num-chars - 1);
  $spaces-width: $spaces * $nbsp-width;

  @return calc(
    #{$padding-width + $chars-width + $num-chars-width + $chars-space-width + $spaces-width} + #{($input-border-width * 2) + 2px}
  );
}
