---
title: Control cookies
group: Help users to...
---
{% from "views/partials/example/_macro.njk" import patternlibExample %}
{% from "components/panel/_macro.njk" import onsPanel %}
{% from "components/external-link/_macro.njk" import onsExternalLink %}

{{
    onsPanel({
        "body": "You will need to delete the 'ons_cookie_message_displayed' cookie if you cannot see the banner",
        "classes": "u-mb-m"
    })
}}
There are two parts to implementing cookies control within a service; cookies banner and cookies preferences page.

## Cookies banner
{{
    patternlibExample({ "path": "components/cookies-banner/examples/cookies-banner/index.njk" })
}}
## How to use
The cookies banner must be placed directly above the ONS [header](/components/header) at the very top of the page. 
It will display if the user hasn't accepted any ONS cookies via the banner or the cookie preferences page.

## How it works
Cookies are grouped by type and have a default boolean value. All but essential cookies are off by default.
An initial cookie is set `ons_cookie_policy { essential: true, settings: false, usage: false, campaigns: false }`

`ons_cookie_policy` will update when a user accepts all cookies or makes changes via the cookies preferences page.
Essential cookies default to true/on as they allow us to set important cookies such as session cookies that 
allow a service to work.

Individual cookies need to be added to the `cookies-functions.js` with key being the cookie name and the value being the cookie group
e.g. `_ga: 'usage'`

When the user has either accepted cookies or updated cookies preferences another cookie is set `ons_cookie_message_displayed: true`. 
This cookie prevents the banner being displayed while the cookie is present.

## Cookie preferences page
{{
    patternlibExample({ "path": "pages/patterns/cookies-settings/examples/cookie-settings-page/index.njk" })
}}
## How to use

The preferences page uses groups of radio buttons which allow a user to allow or disallow cookies to be set. Each group of radios
must contain a `name` attribute prefixed with `cookies-` following with `cookieType` name e.g. `cookies-campaigns`. This allows the 
javascript to set the appropriate cookies. 

If javascript is disabled a message is displayed explaining that javascript is required to set and change cookies.

When the form is submitted a success panel is shown to tell the user that their preferences have been updated. The form is handled by javascript.

## Help improve this pattern
Let us know how we could improve this pattern or share your user research findings.
{{
    onsExternalLink({
        "url": "https://github.com/ONSdigital/design-system/discussions/715",
        "linkText": "Discuss the ‘Control cookies’ pattern on GitHub"
    })
}}
