---
title: Correct errors
group: Help users to...
---
{% from "views/partials/example/_macro.njk" import patternlibExample %}
{% from "components/lists/_macro.njk" import onsList %}
{% from "components/external-link/_macro.njk" import onsExternalLink %}
{% from "components/panel/_macro.njk" import onsPanel %}
{% from "components/button/_macro.njk" import onsButton %}

## When to use this pattern

Follow this pattern whenever you need to help your users enter valid and required information in a form. Validation should occur after the user submits the form.

## When not to use this pattern

Do not use this pattern to tell the user if there is a problem with the service, or if they don't have permission to do something. Instead, you should take them to a separate [error or status page](/patterns/error-status-pages) which tells them what the problem is, and what they should do next.

## How to use this pattern

If the user tries to submit missing or incorrect information you must:

<!-- Not using onsList because it won't display <title> in code tags -->
- show the page again, keeping the user’s information in the form fields as they entered it
- add ‘Error: ’ before the page `<title>` for screen readers to read out first
- show an [error summary](#error-summary) listing all the errors on the page, and move keyboard focus to it
- show a contextual [error detail](#error-details) for each erroneous field

### Error summary

An [error with header panel](/components/panel#error-with-header) component must be displayed at the top of the page's `<main>` container and above the `<h1>` heading when the page reloads, so it's the first element to be read.

{{
    patternlibExample({"path": "patterns/error-validation/examples/error-summary/index.njk"})
}}

#### How it works

The panel contains assistive technology attributes to ensure that, as soon as the page is loaded, the panel receives keyboard focus and the user is notified about this new information.

The panel's header is used to let the user know there's an error with their answer: 'There is a problem with your answer'. If the page heading is not a question, use: 'There is a problem with this page'.

If there is more than one error on the page, the header must display the number of errors, for example 'There are 2 problems with your answer'.

The panel's body must contain an ordered list of links, setting `element` to "ol", if using the list macro.  Each list item must:

- describe the specific error and direct the user towards a resolution
- link to the applicable field or fieldset containing the validation error on the page
- contain a `url` key value that matches the id of the `panel` wrapping the erroneous field or fieldset, preceded with a hash (e.g. `#email-input`), so Javascript can focus the corresponding input

Guidance on specific error messages can be found with each form [component](/components).

### Error details

You must use an [error panel](/components/panel#error) to wrap each erroneous field or fieldset.

{{
    patternlibExample({"path": "patterns/error-validation/examples/error-details/index.njk"})
}}

#### How it works

The [error component](/components/error) is called within each applicable component by providing a `text` and `id` value within the `error` object.

The error panel text string must be the same as its corresponding error summary link. 

Guidance on specific error messages can be found with each applicable [component](/components).

## Example

The prototype provides an example of form validation for missing and invalid inputs.  Attempt to submit the form as it is to see the validation in action.

{{
    onsPanel({
        body: "<strong>Note:</strong> The form in the example prototype will always fail validation."
    })
}}

<div>
    {{
        onsButton({
            "type": 'button',
            "text": 'Launch prototype',
            "classes": 'u-mt-m',
            "url": '/patterns/error-validation/examples/errors-proto/'
        })
    }}
</div>

## Research on this component
{% call onsPanel() %}
    If you have conducted any user research using this pattern, please feed back your findings via the
    {{
        onsExternalLink({
            "url": "https://github.com/ONSdigital/design-system/discussions/30",
            "linkText": "Design System forum"
        })
    }}
{% endcall %}

## Design System forum
{{
    onsExternalLink({
        "url": "https://github.com/ONSdigital/design-system/discussions/30",
        "linkText": "Discuss 'Correct errors' on GitHub"
    })
}}
